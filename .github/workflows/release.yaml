# Copyright 2022 Antoine Martin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release WSL Manager

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]


jobs:

  build-nuget-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the module
        shell: pwsh
        run: |
          Write-Host "Installing PowerShellGet 3..."
          # Ensuring PowerShellGet stable is latest version
          Install-Module -Name PowerShellGet -Force -AllowClobber
          # Installing PowerShellGet 3 Prerelease
          # Pinned to old version due to https://github.com/PowerShell/PowerShellGet/issues/835
          Install-Module -Name PowerShellGet -RequiredVersion 3.0.16-beta16 -AllowPrerelease -Force -Repository PSGallery -SkipPublisherCheck

          Write-Host "Registering local NuGet repository..."
          $LocalRepo = New-Item repo -Type Directory
          Register-PSResourceRepository -Name "LocalRepo" -Uri $LocalRepo.FullName

          $modulePath = "/tmp/$(New-Guid)/Wsl-Manager"
          Write-Host "Creating Release in $modulePath..."
          New-Item $modulePath -ItemType Directory -Force | Out-Null
          Copy-Item .\* $modulePath -Recurse -Exclude .github, *.Publish.ps1, *.Tests.ps1, .git, docs, .vscode, .gitignore, Wsl-Manager.psd1
          $SemVer=$env:GITHUB_REF_NAME -replace '^v', ''
          Get-Content Wsl-Manager.psd1 | %{ $_ -replace "ModuleVersion     = '1.0.0'","ModuleVersion     = '$Semver'" } | Set-Content $modulePath\Wsl-Manager.psd1

          Write-Host "Publishing to local NuGet repository..."
          Publish-PSResource -Path $modulePath -Repository "LocalRepo"

          Write-Host "Publishing to PowerShell Gallery..."
          Publish-PSResource -Path $modulePath -Repository "PSGallery" -ApiKey ${{ secrets.PS_GALLERY_KEY }}

          Remove-Item $modulePath -Recurse

      - name: Upload Nuget Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: repo/*.nupkg

  release:
    needs: [build-nuget-package]
    runs-on: ubuntu-latest
    steps:
      - name: Get distributions
        uses: actions/download-artifact@v5

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          body: |
            The PowerShell module can be found [here](https://www.powershellgallery.com/packages/Wsl-Manager)
          files: |
            *.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
